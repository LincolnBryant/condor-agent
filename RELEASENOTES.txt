Condor Agent Release Notes
==========================

Release 1.26
------------
Added:
<nothing>

Fixed:
* Case #13400: Fixed a bug introduced in 1.25 where condor_agent.py would try to register a handler
  for SIGQUIT on Windows. Windows does not support that signal, so now only non-Windows operating
  systems will attempt to handle SIGQUIT.


Release 1.25
------------
Added:
<nothing>

Fixed:
* Case #5157: The bash script wrapper for condor_agent.py no longer blocks SIGQUIT, which
  prevents the agent from stopping HTCondor shutdown.
* Case #5416: HTCondor expects the HISTORY value to be a file, not a directory, so the agent will
  now only check files for job history. This prevents performance impacts when HISTORY is 
  accidentally defined to be the same as LOG (or other directory with numerous/large files).

Release 1.21
------------
Fixed: 
* No longer uses /etc/condor/config as a default for Windows.


Release 1.19
------------
Added:
<nothing>

Fixed:
* Case #8236: Race condition in cleanup on slow Condor startup
  An overly burdened scheduler can take a while to return jobs when it first
  starts up, despite actually having jobs in the queue. The cleanup thread needs
  to sleep when it first starts up so it doesn't query a scheduler in this state,
  think it's empty, and wipe all the temporary directories of the jobs that are
  in the scheduler's queue.


Release 1.18
------------
Added:
* detailed documentation for accessing the REST API for submissions with a nice example
  that uses curl from the command line to do a "remote" submission via the API.

Fixed:
* Remove a race condition between submissions and the cleanup thread
  It's possible that the submission can complete but a condor_q call for the cluster doesn't
  show any jobs in the queue yet. Busy schedulers can get behind in their processing. This
  change adds a pickle file mtime consideration. The cleanup thread will skip inspecting
  clusters if their pickled data on disk is less than 5 minutes old. That's a safe buffer.

* Case 7403: Submissions fail after a period of time
  Tracked the problem down to using os.getcwd() -- this call is not thread-safe. It queries a
  process-level global. This means a thread doing an os.chdir() can change the value that
  *another* thread gets when it call os.getcwd().


Release 1.15
------------
Added:
* Committed a new RELEASENOTES.txt document to the repository, included in final packages


Fixed:
* Drop the mglob dependency
  It was annoying and not overly useful. Replaced it with a glob+isfile check that does just
  as well.

* Case 7355: Encode the scheduler name in the cluster file on disk to avoid file clashes
  Without the scheduler name included in the file name it's possible that duplicate cluster
  IDs will occur for a multi-scheduler machine which would would mean proxy submission
  .cluster files would clash.

* Omit a \n when returning the cluster ID for a successful submission
  The body of the response on success should just be the cluster ID, no newline
  character required.

* Ensure submission cleaner thread doesn't die
  On startup the thread checks for CONDOR_AGENT_SUBMIT_DIR -- if this isn't defined
  the Agent shouldn't let the cleaner thread exit. Instead it should just warn that
  it's not doing cleanup at this point in time and sleep as it usually does.

